/*
 * Copyright (C) The Qing Project. All rights reserved.
 *
 * Use of this source code is governed by a license that
 * can be found in the LICENSE file.
 */

 /******************************************************************************************
 * This file was automatically generated by mingru (https://github.com/mgenware/mingru)
 * Do not edit this file manually, your changes will be overwritten.
 ******************************************************************************************/

package da

import "github.com/mgenware/mingru-go-lib"

// TableTypeContentBaseVirtualTable ...
type TableTypeContentBaseVirtualTable struct {
}

// ContentBaseVirtualTable ...
var ContentBaseVirtualTable = &TableTypeContentBaseVirtualTable{}

// MingruSQLName returns the name of this table.
func (mrTable *TableTypeContentBaseVirtualTable) MingruSQLName() string {
	return "content_base_virtual_table"
}

// ------------ Actions ------------

// DecrementCmtCount ...
func (mrTable *TableTypeContentBaseVirtualTable) DecrementCmtCount(queryable mingru.Queryable, mrFromTable mingru.Table, id uint64) error {
	result, err := queryable.Exec("UPDATE "+mrFromTable.MingruSQLName()+" SET `cmt_count` = `cmt_count` -1 WHERE `id` = ?", id)
	return mingru.CheckOneRowAffectedWithError(result, err)
}

// IncrementCmtCount ...
func (mrTable *TableTypeContentBaseVirtualTable) IncrementCmtCount(queryable mingru.Queryable, mrFromTable mingru.Table, id uint64) error {
	result, err := queryable.Exec("UPDATE "+mrFromTable.MingruSQLName()+" SET `cmt_count` = `cmt_count` + 1 WHERE `id` = ?", id)
	return mingru.CheckOneRowAffectedWithError(result, err)
}
