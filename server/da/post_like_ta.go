/******************************************************************************************
 * This code was automatically generated by mingru (https://github.com/mgenware/mingru)
 * Do not edit this file manually, your changes will be overwritten.
 ******************************************************************************************/

package da

import (
	"database/sql"

	"github.com/mgenware/go-packagex/v5/dbx"
)

// TableTypePostLike ...
type TableTypePostLike struct {
}

// PostLike ...
var PostLike = &TableTypePostLike{}

// ------------ Actions ------------

func (da *TableTypePostLike) cancelLikeChild1(queryable dbx.Queryable, hostID uint64, userID uint64) error {
	result, err := queryable.Exec("DELETE FROM `post_like` WHERE `host_id` = ? AND `user_id` = ?", hostID, userID)
	return dbx.CheckOneRowAffectedWithError(result, err)
}

func (da *TableTypePostLike) cancelLikeChild2(queryable dbx.Queryable, postID uint64) error {
	result, err := queryable.Exec("UPDATE `post` SET `likes` = `likes` + 1 WHERE `id` = ?", postID)
	return dbx.CheckOneRowAffectedWithError(result, err)
}

// CancelLike ...
func (da *TableTypePostLike) CancelLike(db *sql.DB, hostID uint64, userID uint64, postID uint64) error {
	txErr := dbx.Transact(db, func(tx *sql.Tx) error {
		var err error
		err = da.cancelLikeChild1(tx, hostID, userID)
		if err != nil {
			return err
		}
		err = da.cancelLikeChild2(tx, postID)
		if err != nil {
			return err
		}
		return nil
	})
	return txErr
}
