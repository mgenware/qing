/******************************************************************************************
 * This file was automatically generated by mingru (https://github.com/mgenware/mingru)
 * Do not edit this file manually, your changes will be overwritten.
 ******************************************************************************************/

package da

import (
	"fmt"

	"github.com/mgenware/mingru-go-lib"
)

// TableTypeForumMod ...
type TableTypeForumMod struct {
}

// ForumMod ...
var ForumMod = &TableTypeForumMod{}

// ------------ Actions ------------

// AddMod ...
func (da *TableTypeForumMod) AddMod(queryable mingru.Queryable, objectID uint64, userID uint64) error {
	_, err := queryable.Exec("INSERT INTO `forum_mod` (`object_id`, `user_id`) VALUES (?, ?)", objectID, userID)
	return err
}

// ClearUser ...
func (da *TableTypeForumMod) ClearUser(queryable mingru.Queryable, userID uint64, ids []uint64) (int, error) {
	if len(ids) == 0 {
		return 0, fmt.Errorf("The array argument `ids` cannot be empty")
	}
	var queryParams []interface{}
	queryParams = append(queryParams, userID)
	for _, item := range ids {
		queryParams = append(queryParams, item)
	}
	result, err := queryable.Exec("DELETE FROM `forum_mod` WHERE `user_id` = ? AND `object_id` IN "+mingru.InputPlaceholders(len(ids)), queryParams...)
	return mingru.GetRowsAffectedIntWithError(result, err)
}

// IsMod ...
func (da *TableTypeForumMod) IsMod(queryable mingru.Queryable, objectID uint64, userID uint64) (bool, error) {
	var result bool
	err := queryable.QueryRow("SELECT EXISTS(SELECT * FROM `forum_mod` WHERE `object_id` = ? AND `user_id` = ?)", objectID, userID).Scan(&result)
	if err != nil {
		return result, err
	}
	return result, nil
}

// RemoveMod ...
func (da *TableTypeForumMod) RemoveMod(queryable mingru.Queryable, objectID uint64, userID uint64) error {
	result, err := queryable.Exec("DELETE FROM `forum_mod` WHERE `object_id` = ? AND `user_id` = ?", objectID, userID)
	return mingru.CheckOneRowAffectedWithError(result, err)
}
