/******************************************************************************************
 * This code was automatically generated by mingru (https://github.com/mgenware/mingru)
 * Do not edit this file manually, your changes will be overwritten.
 ******************************************************************************************/

package da

import (
	"time"

	"github.com/mgenware/mingru-go-lib"
)

// TableTypeForumGroup ...
type TableTypeForumGroup struct {
}

// ForumGroup ...
var ForumGroup = &TableTypeForumGroup{}

// ------------ Actions ------------

// ForumGroupTableSelectForumGroupResult ...
type ForumGroupTableSelectForumGroupResult struct {
	CreatedAt   time.Time `json:"createdAt,omitempty"`
	Desc        *string   `json:"desc,omitempty"`
	DisplayName string    `json:"displayName,omitempty"`
}

// SelectForumGroup ...
func (da *TableTypeForumGroup) SelectForumGroup(queryable mingru.Queryable) (*ForumGroupTableSelectForumGroupResult, error) {
	result := &ForumGroupTableSelectForumGroupResult{}
	err := queryable.QueryRow("SELECT `created_at`, `desc`, `display_name` FROM `forum_group`").Scan(&result.CreatedAt, &result.Desc, &result.DisplayName)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// ForumGroupTableSelectForumGroupsResult ...
type ForumGroupTableSelectForumGroupsResult struct {
	CreatedAt   time.Time `json:"createdAt,omitempty"`
	DisplayName string    `json:"displayName,omitempty"`
}

// SelectForumGroups ...
func (da *TableTypeForumGroup) SelectForumGroups(queryable mingru.Queryable) ([]*ForumGroupTableSelectForumGroupsResult, error) {
	rows, err := queryable.Query("SELECT `created_at`, `display_name` FROM `forum_group` ORDER BY `display_name`")
	if err != nil {
		return nil, err
	}
	result := make([]*ForumGroupTableSelectForumGroupsResult, 0)
	defer rows.Close()
	for rows.Next() {
		item := &ForumGroupTableSelectForumGroupsResult{}
		err = rows.Scan(&item.CreatedAt, &item.DisplayName)
		if err != nil {
			return nil, err
		}
		result = append(result, item)
	}
	err = rows.Err()
	if err != nil {
		return nil, err
	}
	return result, nil
}
