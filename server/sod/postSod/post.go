/*
 * Copyright (C) The Qing Project. All rights reserved.
 *
 * Use of this source code is governed by a license that
 * can be found in the LICENSE file.
 */

/******************************************************************************************
 * Do not edit this file manually.
 * Automatically generated via `qing sod post`.
 * See `lib/dev/sod/objects/post.yaml` for details.
 ******************************************************************************************/

package postSod

import "qing/sod/cmtSod"

type PostWind struct {
	ID              string                   `json:"id,omitempty"`
	CmtCount        uint                     `json:"cmtCount,omitempty"`
	InitialLikes    uint                     `json:"initialLikes,omitempty"`
	InitialHasLiked bool                     `json:"initialHasLiked,omitempty"`
	IsThread        bool                     `json:"isThread,omitempty"`
	ForumID         *string                  `json:"forumID,omitempty"`
	FocusMode       *cmtSod.CmtFocusModeData `json:"focusMode,omitempty"`
}

func NewPostWind(id string, cmtCount uint, initialLikes uint, initialHasLiked bool, isThread bool, forumID *string, focusMode *cmtSod.CmtFocusModeData) PostWind {
	return PostWind{
		ID: id,
		CmtCount: cmtCount,
		InitialLikes: initialLikes,
		InitialHasLiked: initialHasLiked,
		IsThread: isThread,
		ForumID: forumID,
		FocusMode: focusMode,
	}
}

type PostCorePayload struct {
	Html    string `json:"html,omitempty"`
	Title   string `json:"title,omitempty"`
	Src     string `json:"src,omitempty"`
	Summary string `json:"summary,omitempty"`
}

func NewPostCorePayload(html string, title string, src string, summary string) PostCorePayload {
	return PostCorePayload{
		Html: html,
		Title: title,
		Src: src,
		Summary: summary,
	}
}
