/******************************************************************************************
* This code was automatically generated by go-const-gen.
* Do not edit this file manually, your changes will be overwritten.
******************************************************************************************/

package defs

// SharedConstants ...
type SharedConstants struct {
	ColumnComments      string
	ColumnCreated       string
	ColumnLikes         string
	DefaultLang         string
	EntityAnswer        int
	EntityCmt           int
	EntityPost          int
	EntityQuestion      int
	EntityReply         int
	EntityThread        int
	EntityThreadMsg     int
	ErrCaptchaNotFound  int
	ErrCaptchaNotMatch  int
	ErrGeneric          int
	ErrInvalidUserOrPwd int
	ErrNeedAuth         int
	MaxCaptchaLen       int
	MaxGenericStringLen int
	MaxPostTitleLen     int
	MaxUserEmailLen     int
	MaxUserNameLen      int
	MaxUserPwdLen       int
	MinUserPwdLen       int
	ProfileTabAnswers   string
	ProfileTabPosts     string
	ProfileTabThreads   string
	RouteApi            string
	RouteAuth           string
	RouteDashboard      string
	RouteForum          string
	RoutePost           string
	RouteTest           string
	RouteThread         string
	RouteUser           string
}

// Constants ...
var Constants *SharedConstants

func init() {
	Constants = &SharedConstants{
		ColumnComments:      "comments",
		ColumnCreated:       "createdAt",
		ColumnLikes:         "likes",
		DefaultLang:         "en",
		EntityAnswer:        7,
		EntityCmt:           2,
		EntityPost:          1,
		EntityQuestion:      5,
		EntityReply:         3,
		EntityThread:        4,
		EntityThreadMsg:     6,
		ErrCaptchaNotFound:  10002,
		ErrCaptchaNotMatch:  10003,
		ErrGeneric:          10000,
		ErrInvalidUserOrPwd: 1,
		ErrNeedAuth:         10001,
		MaxCaptchaLen:       10,
		MaxGenericStringLen: 100,
		MaxPostTitleLen:     200,
		MaxUserEmailLen:     200,
		MaxUserNameLen:      200,
		MaxUserPwdLen:       30,
		MinUserPwdLen:       6,
		ProfileTabAnswers:   "answers",
		ProfileTabPosts:     "posts",
		ProfileTabThreads:   "threads",
		RouteApi:            "s",
		RouteAuth:           "auth",
		RouteDashboard:      "home",
		RouteForum:          "f",
		RoutePost:           "p",
		RouteTest:           "test",
		RouteThread:         "t",
		RouteUser:           "user",
	}
}
